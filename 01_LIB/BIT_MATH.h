#ifndef BIT_MATH_H
#define BIT_MATH_H

#define SET_BIT(REGISTER, BIT) (REGISTER |=  (1<<BIT))
#define CLR_BIT(REGISTER, BIT) (REGISTER &= ~(1<<BIT))
#define TOG_BIT(REGISTER, BIT) (REGISTER ^=  (1<<BIT))
#define GET_BIT(REGISTER, BIT) ((REGISTER>>BIT)&1)

#define SET_BITS(REGISTER, BIT, VALUE) (REGISTER |=  (VALUE<<BIT))
#define CLR_BITS(REGISTER, BIT, VALUE) (REGISTER &= ~(~VALUE<<BIT))
#define TOG_BITS(REGISTER, BIT, VALUE) (REGISTER ^=  (VALUE<<BIT))
#define GET_BITS(REGISTER, BIT, VALUE) ((REGISTER>>BIT)&VALUE)

#define SET_BIT_ATOMIC(REGISTER) (REGISTER =  1)
#define CLR_BIT_ATOMIC(REGISTER) (REGISTER =  0)
#define TOG_BIT_ATOMIC(REGISTER) (REGISTER ^= 1)
#define GET_BIT_ATOMIC(REGISTER) (REGISTER &  1)

#endif